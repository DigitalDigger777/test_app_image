<?php
/**
 * Created by PhpStorm.
 * User: korman
 * Date: 07.02.16
 * Time: 15:10.
 */
namespace ImageBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use ImageBundle\Entity\Album;
use Knp\Bundle\PaginatorBundle\Definition\PaginatorAwareInterface;
use Knp\Component\Pager\Paginator;

/**
 * AlbumRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlbumRepository extends EntityRepository implements PaginatorAwareInterface
{
    /**
     * @var \Knp\Component\Pager\Paginator
     */
    private $paginator;

    /**
     * Sets the KnpPaginator instance.
     *
     * @param Paginator $paginator
     *
     * @return mixed
     */
    public function setPaginator(Paginator $paginator)
    {
        $this->paginator = $paginator;
    }

    /**
     * @param Album $album
     * @param int   $page  Page number
     *
     * @return \Knp\Component\Pager\Pagination\PaginationInterface
     */
    public function getItems(Album $album, $page)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('i')
            ->from('ImageBundle:Image', 'i')
            ->where('i.album=:album')
            ->setParameter('album', $album);

        $query = $qb->getQuery();

        return $this->paginator->paginate(
            $query,
            $page,
            12
        );
    }

    /**
     * Get album list.
     *
     * @return array
     */
    public function getAlbumList()
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('i')
            ->from('ImageBundle:Album', 'i');

        $query = $qb->getQuery();

        return $query->getResult(Query::HYDRATE_ARRAY);
    }
}
